api test.provider {

    enum TestEnum as ProviderEnum {
        A as VALUE_1
        B as VALUE_2
    }

    record TestParameter as ProviderParameter {
        string testField replaces renamedField as fieldA
        TestEnum testEnum
        TestEnum* testList
    }

    record TestResult as ProviderResult {
        string resultField replaces renamedField as retField
        TestEnum resultEnum
        TestEnum* resultList
    }
    
    record StructureWithMonoToPolyField as ProviderStructureWithMonoToPolyField {
        MonoToPolyType field
    }
    
    abstract record MonoToPolyType as ProviderMonoToPolyType {
        int32 field1
    }
    
    record MonoToPolySubTypeA extends MonoToPolyType as ProviderMonoToPolySubTypeA {
        int32 field2
    }
    
    record MonoToPolySubTypeB extends MonoToPolyType as ProviderMonoToPolySubTypeB {
        string field3
    }
    
    operation testOperation(TestParameter): TestResult
    
    operation monoToPolyMapping(MonoToPolyType): MonoToPolyType
    
    operation embeddedMonoToPolyMapping(StructureWithMonoToPolyField): StructureWithMonoToPolyField

}